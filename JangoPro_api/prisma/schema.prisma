generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String        @id @default(uuid())
  name               String
  email              String
  endereco           String?
  password           String
  userType           String
  telefone           String?
  stripe_customer_id String?
  created_at         DateTime?     @default(now())
  updated_at         DateTime?     @default(now())
  haircuts           Haircut[]
  service            Service[]
  barbers            Barber[]
  subscriptions      Subscription?
  userAdmin          String?

  @@map("users")
}

model Subscription {
  id         String    @id
  status     String
  priceId    String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  userId     String    @unique
  user       User      @relation(fields: [userId], references: [id])

  @@map("subscriptions")
}

model Haircut {
  id         String    @id @default(uuid())
  name       String
  price      Float
  status     Boolean   @default(true)
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  user_id    String?
  user       User?     @relation(fields: [user_id], references: [id])
  service    Service[]
  barbers    Barber[]

  @@map("haircuts")
}

model Service {
  id         String    @id @default(uuid())
  customer   String
  date       DateTime?
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  haircut    Haircut?  @relation(fields: [haircut_id], references: [id])
  haircut_id String
  user       User?     @relation(fields: [user_id], references: [id])
  user_id    String?
  barber     Barber?   @relation(fields: [barber_id], references: [id])
  barber_id  String?

  @@map("services")
}

model Barber {
  id         String    @id @default(uuid())
  nome       String
  telefone   String
  email      String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  services   Service[]
  haircuts   Haircut[]
  User       User?     @relation(fields: [userId], references: [id])
  userId     String?

  @@map("barbers")
}
